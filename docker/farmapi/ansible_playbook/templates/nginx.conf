user www-data;
worker_processes 8;
pid /run/nginx.pid;

events {
	worker_connections 19000;
    use epoll;
}

worker_rlimit_nofile	20000;

http {

    # Enumerate all the Tornado servers here
    upstream frontends {
        server 127.0.0.1:8881;
        server 127.0.0.1:8882;
        server 127.0.0.1:8883;
        server 127.0.0.1:8884;
        server 127.0.0.1:8885;
        server 127.0.0.1:8886;
        server 127.0.0.1:8887;
        server 127.0.0.1:8888;
    }

	##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	proxy_read_timeout 200;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	access_log /data/logs/nginx/access.log;
	error_log /data/logs/nginx/error.log;

	##
	# Gzip Settings
	##
	gzip on;
	gzip_disable "msie6";
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types text/plain text/css text/xml text/javascript
		   application/x-javascript application/xml
		   application/xml+rss application/atom+xml
		   application/json application/x-msgpack;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    #for using with Elastic_Load_Balancer
    real_ip_header      X-Forwarded-For;
    set_real_ip_from    172.0.0.0/8;

    server {
        listen 8000;

        # Allow file uploads
        client_max_body_size 50M;

        #setup /status URL to tornado instances (somehow above setting not working for /status).
        location /status {
            proxy_pass http://frontends;
            access_log off;
        }

        # dirct proxy to tornado
        #location ~ ^/ {
        location ~* ^/api/(.*)$ {
            rewrite /api/(.*) /$1  break;
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
    }

}
